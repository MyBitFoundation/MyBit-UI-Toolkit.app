language: node_js
node_js:
  - "8"
cache:
  directories:
    - node_modules
yarn: true
before_script:
  # Install ssh-agent if not already installed, it is required by Docker.
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)
  # Add the SSH key stored in SSH_PRIVATE_KEY variable to a file to be used later
  - echo "$SSH_PRIVATE_KEY" | base64 --decode > bit_rsa
  # Provide the proper permissions for the ssh keys
  - chmod 600 bit_rsa
  # Adding ssh key to agent
  - ssh-add bit_rsa
  # Build Storybook
  - npm run build-storybook

script:
  - GIT_HASH=$(git rev-parse --short HEAD)
  - if [ "$TRAVIS_BRANCH" = "develop" -a ! "$TRAVIS_PULL_REQUEST" = "false" ]; then HOST=$(echo ui-develop.mybit.io); fi
  - if [ "$TRAVIS_BRANCH" = "develop" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then HOST=$(echo ui-staging.mybit.io); fi
  - if [ "$TRAVIS_BRANCH" = "master" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then HOST=$(echo ui.mybit.io); fi
  - if [ "$TRAVIS_BRANCH" = "develop" -a ! "$TRAVIS_PULL_REQUEST" = "false" ]; then STORYBOOK_HOST=$(echo ui-develop.storybook.mybit.io); fi
  - if [ "$TRAVIS_BRANCH" = "develop" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then STORYBOOK_HOST=$(echo ui-staging.storybook.mybit.io); fi
  - if [ "$TRAVIS_BRANCH" = "master" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then STORYBOOK_HOST=$(echo ui.storybook.mybit.io); fi
  - echo ${GIT_HASH} > packages/App/build/version
  - cp CONTRIBUTORS packages/App/build/contributors
  - BUILD_URL=$(npx now --name ui.mybit.io packages/App/build -t $NOW_PROD_TOKEN)
  - npx now alias ${BUILD_URL} $HOST -t $NOW_PROD_TOKEN
  - STORYBOOK_BUILD_URL=$(npx now --name ui.storybook.mybit.io storybook-static -t $NOW_PROD_TOKEN)
  - npx now alias ${STORYBOOK_BUILD_URL} $STORYBOOK_HOST -t $NOW_PROD_TOKEN